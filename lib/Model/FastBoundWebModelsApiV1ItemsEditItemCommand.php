<?php
/**
 * FastBoundWebModelsApiV1ItemsEditItemCommand
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * FastBound API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.62
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * FastBoundWebModelsApiV1ItemsEditItemCommand Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class FastBoundWebModelsApiV1ItemsEditItemCommand implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'FastBound.Web.Models.Api.V1.Items.EditItem+Command';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'external_id' => 'string',
        'item_number' => 'string',
        'do_not_dispose' => 'bool',
        'note' => 'string',
        'manufacturer' => 'string',
        'importer' => 'string',
        'country_of_manufacture' => 'string',
        'serial' => 'string',
        'model' => 'string',
        'caliber' => 'string',
        'type' => 'string',
        'barrel_length' => 'double',
        'total_length' => 'double',
        'condition' => 'string',
        'cost' => 'string',
        'price' => 'string',
        'mpn' => 'string',
        'upc' => 'string',
        'sku' => 'string',
        'location' => 'string',
        'location_verified_utc' => '\DateTime',
        'acquire_date' => '\DateTime',
        'acquisition_type' => 'string',
        'acquire_purchase_order_number' => 'string',
        'acquire_invoice_number' => 'string',
        'acquire_shipment_tracking_number' => 'string',
        'dispose_date' => '\DateTime',
        'disposition_type' => 'string',
        'dispose_purchase_order_number' => 'string',
        'dispose_invoice_number' => 'string',
        'dispose_shipment_tracking_number' => 'string',
        'ttsn' => 'string',
        'otsn' => 'string',
        'submission_date' => '\DateTime',
        'theft_loss_discovered_date' => '\DateTime',
        'theft_loss_type' => 'string',
        'theft_loss_atf_issued_incident_number' => 'string',
        'theft_loss_police_incident_number' => 'string',
        'destroyed_date' => '\DateTime',
        'destroyed_description' => 'string',
        'destroyed_witness1' => 'string',
        'destroyed_witness2' => 'string',
        'lightspeed_system_id' => 'int',
        'lightspeed_serial_id' => 'int',
        'lightspeed_sale_id' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'external_id' => null,
        'item_number' => null,
        'do_not_dispose' => null,
        'note' => null,
        'manufacturer' => null,
        'importer' => null,
        'country_of_manufacture' => null,
        'serial' => null,
        'model' => null,
        'caliber' => null,
        'type' => null,
        'barrel_length' => 'double',
        'total_length' => 'double',
        'condition' => null,
        'cost' => null,
        'price' => null,
        'mpn' => null,
        'upc' => null,
        'sku' => null,
        'location' => null,
        'location_verified_utc' => 'date-time',
        'acquire_date' => 'date-time',
        'acquisition_type' => null,
        'acquire_purchase_order_number' => null,
        'acquire_invoice_number' => null,
        'acquire_shipment_tracking_number' => null,
        'dispose_date' => 'date-time',
        'disposition_type' => null,
        'dispose_purchase_order_number' => null,
        'dispose_invoice_number' => null,
        'dispose_shipment_tracking_number' => null,
        'ttsn' => null,
        'otsn' => null,
        'submission_date' => 'date-time',
        'theft_loss_discovered_date' => 'date-time',
        'theft_loss_type' => null,
        'theft_loss_atf_issued_incident_number' => null,
        'theft_loss_police_incident_number' => null,
        'destroyed_date' => 'date-time',
        'destroyed_description' => null,
        'destroyed_witness1' => null,
        'destroyed_witness2' => null,
        'lightspeed_system_id' => 'int64',
        'lightspeed_serial_id' => 'int64',
        'lightspeed_sale_id' => 'int64'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'external_id' => 'externalId',
        'item_number' => 'itemNumber',
        'do_not_dispose' => 'doNotDispose',
        'note' => 'note',
        'manufacturer' => 'manufacturer',
        'importer' => 'importer',
        'country_of_manufacture' => 'countryOfManufacture',
        'serial' => 'serial',
        'model' => 'model',
        'caliber' => 'caliber',
        'type' => 'type',
        'barrel_length' => 'barrelLength',
        'total_length' => 'totalLength',
        'condition' => 'condition',
        'cost' => 'cost',
        'price' => 'price',
        'mpn' => 'mpn',
        'upc' => 'upc',
        'sku' => 'sku',
        'location' => 'location',
        'location_verified_utc' => 'locationVerifiedUtc',
        'acquire_date' => 'acquire_Date',
        'acquisition_type' => 'acquisitionType',
        'acquire_purchase_order_number' => 'acquire_PurchaseOrderNumber',
        'acquire_invoice_number' => 'acquire_InvoiceNumber',
        'acquire_shipment_tracking_number' => 'acquire_ShipmentTrackingNumber',
        'dispose_date' => 'dispose_Date',
        'disposition_type' => 'dispositionType',
        'dispose_purchase_order_number' => 'dispose_PurchaseOrderNumber',
        'dispose_invoice_number' => 'dispose_InvoiceNumber',
        'dispose_shipment_tracking_number' => 'dispose_ShipmentTrackingNumber',
        'ttsn' => 'ttsn',
        'otsn' => 'otsn',
        'submission_date' => 'submissionDate',
        'theft_loss_discovered_date' => 'theftLoss_DiscoveredDate',
        'theft_loss_type' => 'theftLoss_Type',
        'theft_loss_atf_issued_incident_number' => 'theftLoss_ATFIssuedIncidentNumber',
        'theft_loss_police_incident_number' => 'theftLoss_PoliceIncidentNumber',
        'destroyed_date' => 'destroyed_Date',
        'destroyed_description' => 'destroyed_Description',
        'destroyed_witness1' => 'destroyed_Witness1',
        'destroyed_witness2' => 'destroyed_Witness2',
        'lightspeed_system_id' => 'lightspeedSystemID',
        'lightspeed_serial_id' => 'lightspeedSerialID',
        'lightspeed_sale_id' => 'lightspeedSaleID'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'external_id' => 'setExternalId',
        'item_number' => 'setItemNumber',
        'do_not_dispose' => 'setDoNotDispose',
        'note' => 'setNote',
        'manufacturer' => 'setManufacturer',
        'importer' => 'setImporter',
        'country_of_manufacture' => 'setCountryOfManufacture',
        'serial' => 'setSerial',
        'model' => 'setModel',
        'caliber' => 'setCaliber',
        'type' => 'setType',
        'barrel_length' => 'setBarrelLength',
        'total_length' => 'setTotalLength',
        'condition' => 'setCondition',
        'cost' => 'setCost',
        'price' => 'setPrice',
        'mpn' => 'setMpn',
        'upc' => 'setUpc',
        'sku' => 'setSku',
        'location' => 'setLocation',
        'location_verified_utc' => 'setLocationVerifiedUtc',
        'acquire_date' => 'setAcquireDate',
        'acquisition_type' => 'setAcquisitionType',
        'acquire_purchase_order_number' => 'setAcquirePurchaseOrderNumber',
        'acquire_invoice_number' => 'setAcquireInvoiceNumber',
        'acquire_shipment_tracking_number' => 'setAcquireShipmentTrackingNumber',
        'dispose_date' => 'setDisposeDate',
        'disposition_type' => 'setDispositionType',
        'dispose_purchase_order_number' => 'setDisposePurchaseOrderNumber',
        'dispose_invoice_number' => 'setDisposeInvoiceNumber',
        'dispose_shipment_tracking_number' => 'setDisposeShipmentTrackingNumber',
        'ttsn' => 'setTtsn',
        'otsn' => 'setOtsn',
        'submission_date' => 'setSubmissionDate',
        'theft_loss_discovered_date' => 'setTheftLossDiscoveredDate',
        'theft_loss_type' => 'setTheftLossType',
        'theft_loss_atf_issued_incident_number' => 'setTheftLossAtfIssuedIncidentNumber',
        'theft_loss_police_incident_number' => 'setTheftLossPoliceIncidentNumber',
        'destroyed_date' => 'setDestroyedDate',
        'destroyed_description' => 'setDestroyedDescription',
        'destroyed_witness1' => 'setDestroyedWitness1',
        'destroyed_witness2' => 'setDestroyedWitness2',
        'lightspeed_system_id' => 'setLightspeedSystemId',
        'lightspeed_serial_id' => 'setLightspeedSerialId',
        'lightspeed_sale_id' => 'setLightspeedSaleId'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'external_id' => 'getExternalId',
        'item_number' => 'getItemNumber',
        'do_not_dispose' => 'getDoNotDispose',
        'note' => 'getNote',
        'manufacturer' => 'getManufacturer',
        'importer' => 'getImporter',
        'country_of_manufacture' => 'getCountryOfManufacture',
        'serial' => 'getSerial',
        'model' => 'getModel',
        'caliber' => 'getCaliber',
        'type' => 'getType',
        'barrel_length' => 'getBarrelLength',
        'total_length' => 'getTotalLength',
        'condition' => 'getCondition',
        'cost' => 'getCost',
        'price' => 'getPrice',
        'mpn' => 'getMpn',
        'upc' => 'getUpc',
        'sku' => 'getSku',
        'location' => 'getLocation',
        'location_verified_utc' => 'getLocationVerifiedUtc',
        'acquire_date' => 'getAcquireDate',
        'acquisition_type' => 'getAcquisitionType',
        'acquire_purchase_order_number' => 'getAcquirePurchaseOrderNumber',
        'acquire_invoice_number' => 'getAcquireInvoiceNumber',
        'acquire_shipment_tracking_number' => 'getAcquireShipmentTrackingNumber',
        'dispose_date' => 'getDisposeDate',
        'disposition_type' => 'getDispositionType',
        'dispose_purchase_order_number' => 'getDisposePurchaseOrderNumber',
        'dispose_invoice_number' => 'getDisposeInvoiceNumber',
        'dispose_shipment_tracking_number' => 'getDisposeShipmentTrackingNumber',
        'ttsn' => 'getTtsn',
        'otsn' => 'getOtsn',
        'submission_date' => 'getSubmissionDate',
        'theft_loss_discovered_date' => 'getTheftLossDiscoveredDate',
        'theft_loss_type' => 'getTheftLossType',
        'theft_loss_atf_issued_incident_number' => 'getTheftLossAtfIssuedIncidentNumber',
        'theft_loss_police_incident_number' => 'getTheftLossPoliceIncidentNumber',
        'destroyed_date' => 'getDestroyedDate',
        'destroyed_description' => 'getDestroyedDescription',
        'destroyed_witness1' => 'getDestroyedWitness1',
        'destroyed_witness2' => 'getDestroyedWitness2',
        'lightspeed_system_id' => 'getLightspeedSystemId',
        'lightspeed_serial_id' => 'getLightspeedSerialId',
        'lightspeed_sale_id' => 'getLightspeedSaleId'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['external_id'] = isset($data['external_id']) ? $data['external_id'] : null;
        $this->container['item_number'] = isset($data['item_number']) ? $data['item_number'] : null;
        $this->container['do_not_dispose'] = isset($data['do_not_dispose']) ? $data['do_not_dispose'] : null;
        $this->container['note'] = isset($data['note']) ? $data['note'] : null;
        $this->container['manufacturer'] = isset($data['manufacturer']) ? $data['manufacturer'] : null;
        $this->container['importer'] = isset($data['importer']) ? $data['importer'] : null;
        $this->container['country_of_manufacture'] = isset($data['country_of_manufacture']) ? $data['country_of_manufacture'] : null;
        $this->container['serial'] = isset($data['serial']) ? $data['serial'] : null;
        $this->container['model'] = isset($data['model']) ? $data['model'] : null;
        $this->container['caliber'] = isset($data['caliber']) ? $data['caliber'] : null;
        $this->container['type'] = isset($data['type']) ? $data['type'] : null;
        $this->container['barrel_length'] = isset($data['barrel_length']) ? $data['barrel_length'] : null;
        $this->container['total_length'] = isset($data['total_length']) ? $data['total_length'] : null;
        $this->container['condition'] = isset($data['condition']) ? $data['condition'] : null;
        $this->container['cost'] = isset($data['cost']) ? $data['cost'] : null;
        $this->container['price'] = isset($data['price']) ? $data['price'] : null;
        $this->container['mpn'] = isset($data['mpn']) ? $data['mpn'] : null;
        $this->container['upc'] = isset($data['upc']) ? $data['upc'] : null;
        $this->container['sku'] = isset($data['sku']) ? $data['sku'] : null;
        $this->container['location'] = isset($data['location']) ? $data['location'] : null;
        $this->container['location_verified_utc'] = isset($data['location_verified_utc']) ? $data['location_verified_utc'] : null;
        $this->container['acquire_date'] = isset($data['acquire_date']) ? $data['acquire_date'] : null;
        $this->container['acquisition_type'] = isset($data['acquisition_type']) ? $data['acquisition_type'] : null;
        $this->container['acquire_purchase_order_number'] = isset($data['acquire_purchase_order_number']) ? $data['acquire_purchase_order_number'] : null;
        $this->container['acquire_invoice_number'] = isset($data['acquire_invoice_number']) ? $data['acquire_invoice_number'] : null;
        $this->container['acquire_shipment_tracking_number'] = isset($data['acquire_shipment_tracking_number']) ? $data['acquire_shipment_tracking_number'] : null;
        $this->container['dispose_date'] = isset($data['dispose_date']) ? $data['dispose_date'] : null;
        $this->container['disposition_type'] = isset($data['disposition_type']) ? $data['disposition_type'] : null;
        $this->container['dispose_purchase_order_number'] = isset($data['dispose_purchase_order_number']) ? $data['dispose_purchase_order_number'] : null;
        $this->container['dispose_invoice_number'] = isset($data['dispose_invoice_number']) ? $data['dispose_invoice_number'] : null;
        $this->container['dispose_shipment_tracking_number'] = isset($data['dispose_shipment_tracking_number']) ? $data['dispose_shipment_tracking_number'] : null;
        $this->container['ttsn'] = isset($data['ttsn']) ? $data['ttsn'] : null;
        $this->container['otsn'] = isset($data['otsn']) ? $data['otsn'] : null;
        $this->container['submission_date'] = isset($data['submission_date']) ? $data['submission_date'] : null;
        $this->container['theft_loss_discovered_date'] = isset($data['theft_loss_discovered_date']) ? $data['theft_loss_discovered_date'] : null;
        $this->container['theft_loss_type'] = isset($data['theft_loss_type']) ? $data['theft_loss_type'] : null;
        $this->container['theft_loss_atf_issued_incident_number'] = isset($data['theft_loss_atf_issued_incident_number']) ? $data['theft_loss_atf_issued_incident_number'] : null;
        $this->container['theft_loss_police_incident_number'] = isset($data['theft_loss_police_incident_number']) ? $data['theft_loss_police_incident_number'] : null;
        $this->container['destroyed_date'] = isset($data['destroyed_date']) ? $data['destroyed_date'] : null;
        $this->container['destroyed_description'] = isset($data['destroyed_description']) ? $data['destroyed_description'] : null;
        $this->container['destroyed_witness1'] = isset($data['destroyed_witness1']) ? $data['destroyed_witness1'] : null;
        $this->container['destroyed_witness2'] = isset($data['destroyed_witness2']) ? $data['destroyed_witness2'] : null;
        $this->container['lightspeed_system_id'] = isset($data['lightspeed_system_id']) ? $data['lightspeed_system_id'] : null;
        $this->container['lightspeed_serial_id'] = isset($data['lightspeed_serial_id']) ? $data['lightspeed_serial_id'] : null;
        $this->container['lightspeed_sale_id'] = isset($data['lightspeed_sale_id']) ? $data['lightspeed_sale_id'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['item_number'] === null) {
            $invalidProperties[] = "'item_number' can't be null";
        }
        if ($this->container['manufacturer'] === null) {
            $invalidProperties[] = "'manufacturer' can't be null";
        }
        if ($this->container['serial'] === null) {
            $invalidProperties[] = "'serial' can't be null";
        }
        if ($this->container['model'] === null) {
            $invalidProperties[] = "'model' can't be null";
        }
        if ($this->container['caliber'] === null) {
            $invalidProperties[] = "'caliber' can't be null";
        }
        if ($this->container['type'] === null) {
            $invalidProperties[] = "'type' can't be null";
        }
        if ($this->container['acquire_date'] === null) {
            $invalidProperties[] = "'acquire_date' can't be null";
        }
        if ($this->container['acquisition_type'] === null) {
            $invalidProperties[] = "'acquisition_type' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets external_id
     *
     * @return string
     */
    public function getExternalId()
    {
        return $this->container['external_id'];
    }

    /**
     * Sets external_id
     *
     * @param string $external_id external_id
     *
     * @return $this
     */
    public function setExternalId($external_id)
    {
        $this->container['external_id'] = $external_id;

        return $this;
    }

    /**
     * Gets item_number
     *
     * @return string
     */
    public function getItemNumber()
    {
        return $this->container['item_number'];
    }

    /**
     * Sets item_number
     *
     * @param string $item_number item_number
     *
     * @return $this
     */
    public function setItemNumber($item_number)
    {
        $this->container['item_number'] = $item_number;

        return $this;
    }

    /**
     * Gets do_not_dispose
     *
     * @return bool
     */
    public function getDoNotDispose()
    {
        return $this->container['do_not_dispose'];
    }

    /**
     * Sets do_not_dispose
     *
     * @param bool $do_not_dispose do_not_dispose
     *
     * @return $this
     */
    public function setDoNotDispose($do_not_dispose)
    {
        $this->container['do_not_dispose'] = $do_not_dispose;

        return $this;
    }

    /**
     * Gets note
     *
     * @return string
     */
    public function getNote()
    {
        return $this->container['note'];
    }

    /**
     * Sets note
     *
     * @param string $note note
     *
     * @return $this
     */
    public function setNote($note)
    {
        $this->container['note'] = $note;

        return $this;
    }

    /**
     * Gets manufacturer
     *
     * @return string
     */
    public function getManufacturer()
    {
        return $this->container['manufacturer'];
    }

    /**
     * Sets manufacturer
     *
     * @param string $manufacturer manufacturer
     *
     * @return $this
     */
    public function setManufacturer($manufacturer)
    {
        $this->container['manufacturer'] = $manufacturer;

        return $this;
    }

    /**
     * Gets importer
     *
     * @return string
     */
    public function getImporter()
    {
        return $this->container['importer'];
    }

    /**
     * Sets importer
     *
     * @param string $importer importer
     *
     * @return $this
     */
    public function setImporter($importer)
    {
        $this->container['importer'] = $importer;

        return $this;
    }

    /**
     * Gets country_of_manufacture
     *
     * @return string
     */
    public function getCountryOfManufacture()
    {
        return $this->container['country_of_manufacture'];
    }

    /**
     * Sets country_of_manufacture
     *
     * @param string $country_of_manufacture country_of_manufacture
     *
     * @return $this
     */
    public function setCountryOfManufacture($country_of_manufacture)
    {
        $this->container['country_of_manufacture'] = $country_of_manufacture;

        return $this;
    }

    /**
     * Gets serial
     *
     * @return string
     */
    public function getSerial()
    {
        return $this->container['serial'];
    }

    /**
     * Sets serial
     *
     * @param string $serial serial
     *
     * @return $this
     */
    public function setSerial($serial)
    {
        $this->container['serial'] = $serial;

        return $this;
    }

    /**
     * Gets model
     *
     * @return string
     */
    public function getModel()
    {
        return $this->container['model'];
    }

    /**
     * Sets model
     *
     * @param string $model model
     *
     * @return $this
     */
    public function setModel($model)
    {
        $this->container['model'] = $model;

        return $this;
    }

    /**
     * Gets caliber
     *
     * @return string
     */
    public function getCaliber()
    {
        return $this->container['caliber'];
    }

    /**
     * Sets caliber
     *
     * @param string $caliber caliber
     *
     * @return $this
     */
    public function setCaliber($caliber)
    {
        $this->container['caliber'] = $caliber;

        return $this;
    }

    /**
     * Gets type
     *
     * @return string
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string $type type
     *
     * @return $this
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets barrel_length
     *
     * @return double
     */
    public function getBarrelLength()
    {
        return $this->container['barrel_length'];
    }

    /**
     * Sets barrel_length
     *
     * @param double $barrel_length barrel_length
     *
     * @return $this
     */
    public function setBarrelLength($barrel_length)
    {
        $this->container['barrel_length'] = $barrel_length;

        return $this;
    }

    /**
     * Gets total_length
     *
     * @return double
     */
    public function getTotalLength()
    {
        return $this->container['total_length'];
    }

    /**
     * Sets total_length
     *
     * @param double $total_length total_length
     *
     * @return $this
     */
    public function setTotalLength($total_length)
    {
        $this->container['total_length'] = $total_length;

        return $this;
    }

    /**
     * Gets condition
     *
     * @return string
     */
    public function getCondition()
    {
        return $this->container['condition'];
    }

    /**
     * Sets condition
     *
     * @param string $condition condition
     *
     * @return $this
     */
    public function setCondition($condition)
    {
        $this->container['condition'] = $condition;

        return $this;
    }

    /**
     * Gets cost
     *
     * @return string
     */
    public function getCost()
    {
        return $this->container['cost'];
    }

    /**
     * Sets cost
     *
     * @param string $cost cost
     *
     * @return $this
     */
    public function setCost($cost)
    {
        $this->container['cost'] = $cost;

        return $this;
    }

    /**
     * Gets price
     *
     * @return string
     */
    public function getPrice()
    {
        return $this->container['price'];
    }

    /**
     * Sets price
     *
     * @param string $price price
     *
     * @return $this
     */
    public function setPrice($price)
    {
        $this->container['price'] = $price;

        return $this;
    }

    /**
     * Gets mpn
     *
     * @return string
     */
    public function getMpn()
    {
        return $this->container['mpn'];
    }

    /**
     * Sets mpn
     *
     * @param string $mpn mpn
     *
     * @return $this
     */
    public function setMpn($mpn)
    {
        $this->container['mpn'] = $mpn;

        return $this;
    }

    /**
     * Gets upc
     *
     * @return string
     */
    public function getUpc()
    {
        return $this->container['upc'];
    }

    /**
     * Sets upc
     *
     * @param string $upc upc
     *
     * @return $this
     */
    public function setUpc($upc)
    {
        $this->container['upc'] = $upc;

        return $this;
    }

    /**
     * Gets sku
     *
     * @return string
     */
    public function getSku()
    {
        return $this->container['sku'];
    }

    /**
     * Sets sku
     *
     * @param string $sku sku
     *
     * @return $this
     */
    public function setSku($sku)
    {
        $this->container['sku'] = $sku;

        return $this;
    }

    /**
     * Gets location
     *
     * @return string
     */
    public function getLocation()
    {
        return $this->container['location'];
    }

    /**
     * Sets location
     *
     * @param string $location location
     *
     * @return $this
     */
    public function setLocation($location)
    {
        $this->container['location'] = $location;

        return $this;
    }

    /**
     * Gets location_verified_utc
     *
     * @return \DateTime
     */
    public function getLocationVerifiedUtc()
    {
        return $this->container['location_verified_utc'];
    }

    /**
     * Sets location_verified_utc
     *
     * @param \DateTime $location_verified_utc location_verified_utc
     *
     * @return $this
     */
    public function setLocationVerifiedUtc($location_verified_utc)
    {
        $this->container['location_verified_utc'] = $location_verified_utc;

        return $this;
    }

    /**
     * Gets acquire_date
     *
     * @return \DateTime
     */
    public function getAcquireDate()
    {
        return $this->container['acquire_date'];
    }

    /**
     * Sets acquire_date
     *
     * @param \DateTime $acquire_date acquire_date
     *
     * @return $this
     */
    public function setAcquireDate($acquire_date)
    {
        $this->container['acquire_date'] = $acquire_date;

        return $this;
    }

    /**
     * Gets acquisition_type
     *
     * @return string
     */
    public function getAcquisitionType()
    {
        return $this->container['acquisition_type'];
    }

    /**
     * Sets acquisition_type
     *
     * @param string $acquisition_type acquisition_type
     *
     * @return $this
     */
    public function setAcquisitionType($acquisition_type)
    {
        $this->container['acquisition_type'] = $acquisition_type;

        return $this;
    }

    /**
     * Gets acquire_purchase_order_number
     *
     * @return string
     */
    public function getAcquirePurchaseOrderNumber()
    {
        return $this->container['acquire_purchase_order_number'];
    }

    /**
     * Sets acquire_purchase_order_number
     *
     * @param string $acquire_purchase_order_number acquire_purchase_order_number
     *
     * @return $this
     */
    public function setAcquirePurchaseOrderNumber($acquire_purchase_order_number)
    {
        $this->container['acquire_purchase_order_number'] = $acquire_purchase_order_number;

        return $this;
    }

    /**
     * Gets acquire_invoice_number
     *
     * @return string
     */
    public function getAcquireInvoiceNumber()
    {
        return $this->container['acquire_invoice_number'];
    }

    /**
     * Sets acquire_invoice_number
     *
     * @param string $acquire_invoice_number acquire_invoice_number
     *
     * @return $this
     */
    public function setAcquireInvoiceNumber($acquire_invoice_number)
    {
        $this->container['acquire_invoice_number'] = $acquire_invoice_number;

        return $this;
    }

    /**
     * Gets acquire_shipment_tracking_number
     *
     * @return string
     */
    public function getAcquireShipmentTrackingNumber()
    {
        return $this->container['acquire_shipment_tracking_number'];
    }

    /**
     * Sets acquire_shipment_tracking_number
     *
     * @param string $acquire_shipment_tracking_number acquire_shipment_tracking_number
     *
     * @return $this
     */
    public function setAcquireShipmentTrackingNumber($acquire_shipment_tracking_number)
    {
        $this->container['acquire_shipment_tracking_number'] = $acquire_shipment_tracking_number;

        return $this;
    }

    /**
     * Gets dispose_date
     *
     * @return \DateTime
     */
    public function getDisposeDate()
    {
        return $this->container['dispose_date'];
    }

    /**
     * Sets dispose_date
     *
     * @param \DateTime $dispose_date dispose_date
     *
     * @return $this
     */
    public function setDisposeDate($dispose_date)
    {
        $this->container['dispose_date'] = $dispose_date;

        return $this;
    }

    /**
     * Gets disposition_type
     *
     * @return string
     */
    public function getDispositionType()
    {
        return $this->container['disposition_type'];
    }

    /**
     * Sets disposition_type
     *
     * @param string $disposition_type disposition_type
     *
     * @return $this
     */
    public function setDispositionType($disposition_type)
    {
        $this->container['disposition_type'] = $disposition_type;

        return $this;
    }

    /**
     * Gets dispose_purchase_order_number
     *
     * @return string
     */
    public function getDisposePurchaseOrderNumber()
    {
        return $this->container['dispose_purchase_order_number'];
    }

    /**
     * Sets dispose_purchase_order_number
     *
     * @param string $dispose_purchase_order_number dispose_purchase_order_number
     *
     * @return $this
     */
    public function setDisposePurchaseOrderNumber($dispose_purchase_order_number)
    {
        $this->container['dispose_purchase_order_number'] = $dispose_purchase_order_number;

        return $this;
    }

    /**
     * Gets dispose_invoice_number
     *
     * @return string
     */
    public function getDisposeInvoiceNumber()
    {
        return $this->container['dispose_invoice_number'];
    }

    /**
     * Sets dispose_invoice_number
     *
     * @param string $dispose_invoice_number dispose_invoice_number
     *
     * @return $this
     */
    public function setDisposeInvoiceNumber($dispose_invoice_number)
    {
        $this->container['dispose_invoice_number'] = $dispose_invoice_number;

        return $this;
    }

    /**
     * Gets dispose_shipment_tracking_number
     *
     * @return string
     */
    public function getDisposeShipmentTrackingNumber()
    {
        return $this->container['dispose_shipment_tracking_number'];
    }

    /**
     * Sets dispose_shipment_tracking_number
     *
     * @param string $dispose_shipment_tracking_number dispose_shipment_tracking_number
     *
     * @return $this
     */
    public function setDisposeShipmentTrackingNumber($dispose_shipment_tracking_number)
    {
        $this->container['dispose_shipment_tracking_number'] = $dispose_shipment_tracking_number;

        return $this;
    }

    /**
     * Gets ttsn
     *
     * @return string
     */
    public function getTtsn()
    {
        return $this->container['ttsn'];
    }

    /**
     * Sets ttsn
     *
     * @param string $ttsn ttsn
     *
     * @return $this
     */
    public function setTtsn($ttsn)
    {
        $this->container['ttsn'] = $ttsn;

        return $this;
    }

    /**
     * Gets otsn
     *
     * @return string
     */
    public function getOtsn()
    {
        return $this->container['otsn'];
    }

    /**
     * Sets otsn
     *
     * @param string $otsn otsn
     *
     * @return $this
     */
    public function setOtsn($otsn)
    {
        $this->container['otsn'] = $otsn;

        return $this;
    }

    /**
     * Gets submission_date
     *
     * @return \DateTime
     */
    public function getSubmissionDate()
    {
        return $this->container['submission_date'];
    }

    /**
     * Sets submission_date
     *
     * @param \DateTime $submission_date submission_date
     *
     * @return $this
     */
    public function setSubmissionDate($submission_date)
    {
        $this->container['submission_date'] = $submission_date;

        return $this;
    }

    /**
     * Gets theft_loss_discovered_date
     *
     * @return \DateTime
     */
    public function getTheftLossDiscoveredDate()
    {
        return $this->container['theft_loss_discovered_date'];
    }

    /**
     * Sets theft_loss_discovered_date
     *
     * @param \DateTime $theft_loss_discovered_date theft_loss_discovered_date
     *
     * @return $this
     */
    public function setTheftLossDiscoveredDate($theft_loss_discovered_date)
    {
        $this->container['theft_loss_discovered_date'] = $theft_loss_discovered_date;

        return $this;
    }

    /**
     * Gets theft_loss_type
     *
     * @return string
     */
    public function getTheftLossType()
    {
        return $this->container['theft_loss_type'];
    }

    /**
     * Sets theft_loss_type
     *
     * @param string $theft_loss_type theft_loss_type
     *
     * @return $this
     */
    public function setTheftLossType($theft_loss_type)
    {
        $this->container['theft_loss_type'] = $theft_loss_type;

        return $this;
    }

    /**
     * Gets theft_loss_atf_issued_incident_number
     *
     * @return string
     */
    public function getTheftLossAtfIssuedIncidentNumber()
    {
        return $this->container['theft_loss_atf_issued_incident_number'];
    }

    /**
     * Sets theft_loss_atf_issued_incident_number
     *
     * @param string $theft_loss_atf_issued_incident_number theft_loss_atf_issued_incident_number
     *
     * @return $this
     */
    public function setTheftLossAtfIssuedIncidentNumber($theft_loss_atf_issued_incident_number)
    {
        $this->container['theft_loss_atf_issued_incident_number'] = $theft_loss_atf_issued_incident_number;

        return $this;
    }

    /**
     * Gets theft_loss_police_incident_number
     *
     * @return string
     */
    public function getTheftLossPoliceIncidentNumber()
    {
        return $this->container['theft_loss_police_incident_number'];
    }

    /**
     * Sets theft_loss_police_incident_number
     *
     * @param string $theft_loss_police_incident_number theft_loss_police_incident_number
     *
     * @return $this
     */
    public function setTheftLossPoliceIncidentNumber($theft_loss_police_incident_number)
    {
        $this->container['theft_loss_police_incident_number'] = $theft_loss_police_incident_number;

        return $this;
    }

    /**
     * Gets destroyed_date
     *
     * @return \DateTime
     */
    public function getDestroyedDate()
    {
        return $this->container['destroyed_date'];
    }

    /**
     * Sets destroyed_date
     *
     * @param \DateTime $destroyed_date destroyed_date
     *
     * @return $this
     */
    public function setDestroyedDate($destroyed_date)
    {
        $this->container['destroyed_date'] = $destroyed_date;

        return $this;
    }

    /**
     * Gets destroyed_description
     *
     * @return string
     */
    public function getDestroyedDescription()
    {
        return $this->container['destroyed_description'];
    }

    /**
     * Sets destroyed_description
     *
     * @param string $destroyed_description destroyed_description
     *
     * @return $this
     */
    public function setDestroyedDescription($destroyed_description)
    {
        $this->container['destroyed_description'] = $destroyed_description;

        return $this;
    }

    /**
     * Gets destroyed_witness1
     *
     * @return string
     */
    public function getDestroyedWitness1()
    {
        return $this->container['destroyed_witness1'];
    }

    /**
     * Sets destroyed_witness1
     *
     * @param string $destroyed_witness1 destroyed_witness1
     *
     * @return $this
     */
    public function setDestroyedWitness1($destroyed_witness1)
    {
        $this->container['destroyed_witness1'] = $destroyed_witness1;

        return $this;
    }

    /**
     * Gets destroyed_witness2
     *
     * @return string
     */
    public function getDestroyedWitness2()
    {
        return $this->container['destroyed_witness2'];
    }

    /**
     * Sets destroyed_witness2
     *
     * @param string $destroyed_witness2 destroyed_witness2
     *
     * @return $this
     */
    public function setDestroyedWitness2($destroyed_witness2)
    {
        $this->container['destroyed_witness2'] = $destroyed_witness2;

        return $this;
    }

    /**
     * Gets lightspeed_system_id
     *
     * @return int
     */
    public function getLightspeedSystemId()
    {
        return $this->container['lightspeed_system_id'];
    }

    /**
     * Sets lightspeed_system_id
     *
     * @param int $lightspeed_system_id lightspeed_system_id
     *
     * @return $this
     */
    public function setLightspeedSystemId($lightspeed_system_id)
    {
        $this->container['lightspeed_system_id'] = $lightspeed_system_id;

        return $this;
    }

    /**
     * Gets lightspeed_serial_id
     *
     * @return int
     */
    public function getLightspeedSerialId()
    {
        return $this->container['lightspeed_serial_id'];
    }

    /**
     * Sets lightspeed_serial_id
     *
     * @param int $lightspeed_serial_id lightspeed_serial_id
     *
     * @return $this
     */
    public function setLightspeedSerialId($lightspeed_serial_id)
    {
        $this->container['lightspeed_serial_id'] = $lightspeed_serial_id;

        return $this;
    }

    /**
     * Gets lightspeed_sale_id
     *
     * @return int
     */
    public function getLightspeedSaleId()
    {
        return $this->container['lightspeed_sale_id'];
    }

    /**
     * Sets lightspeed_sale_id
     *
     * @param int $lightspeed_sale_id lightspeed_sale_id
     *
     * @return $this
     */
    public function setLightspeedSaleId($lightspeed_sale_id)
    {
        $this->container['lightspeed_sale_id'] = $lightspeed_sale_id;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
