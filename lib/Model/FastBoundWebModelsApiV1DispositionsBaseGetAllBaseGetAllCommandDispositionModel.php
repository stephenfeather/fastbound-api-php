<?php
/**
 * FastBoundWebModelsApiV1DispositionsBaseGetAllBaseGetAllCommandDispositionModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * FastBound API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.62
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * FastBoundWebModelsApiV1DispositionsBaseGetAllBaseGetAllCommandDispositionModel Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class FastBoundWebModelsApiV1DispositionsBaseGetAllBaseGetAllCommandDispositionModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'FastBound.Web.Models.Api.V1.Dispositions.BaseGetAll+BaseGetAllCommand+DispositionModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'string',
        'external_id' => 'string',
        'date' => '\DateTime',
        'contact_id' => 'string',
        'contact_first_name' => 'string',
        'contact_middle_name' => 'string',
        'contact_last_name' => 'string',
        'contact_license_name' => 'string',
        'contact_trade_name' => 'string',
        'contact_organization_name' => 'string',
        'type' => 'string',
        'item_count' => 'int',
        'ttsn' => 'string',
        'otsn' => 'string',
        'purchase_order_number' => 'string',
        'invoice_number' => 'string',
        'shipment_tracking_number' => 'string',
        'theft_loss_discovered_date' => '\DateTime',
        'theft_loss_type' => 'string',
        'theft_loss_atf_issued_incident_number' => 'string',
        'theft_loss_police_incident_number' => 'string',
        'destroyed_date' => '\DateTime',
        'destroyed_description' => 'string',
        'destroyed_witness1' => 'string',
        'destroyed_witness2' => 'string',
        'submission_date' => '\DateTime',
        'is4473' => 'bool',
        'is_manufacturing_disposition' => 'bool',
        'status' => '\Swagger\Client\Model\FastBoundWebModelsApiV1DispositionsBaseGetAllBaseGetAllCommandDispositionStatusModel',
        'note' => 'string',
        'create_user_email' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => 'uuid',
        'external_id' => null,
        'date' => 'date-time',
        'contact_id' => 'uuid',
        'contact_first_name' => null,
        'contact_middle_name' => null,
        'contact_last_name' => null,
        'contact_license_name' => null,
        'contact_trade_name' => null,
        'contact_organization_name' => null,
        'type' => null,
        'item_count' => 'int32',
        'ttsn' => null,
        'otsn' => null,
        'purchase_order_number' => null,
        'invoice_number' => null,
        'shipment_tracking_number' => null,
        'theft_loss_discovered_date' => 'date-time',
        'theft_loss_type' => null,
        'theft_loss_atf_issued_incident_number' => null,
        'theft_loss_police_incident_number' => null,
        'destroyed_date' => 'date-time',
        'destroyed_description' => null,
        'destroyed_witness1' => null,
        'destroyed_witness2' => null,
        'submission_date' => 'date-time',
        'is4473' => null,
        'is_manufacturing_disposition' => null,
        'status' => null,
        'note' => null,
        'create_user_email' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'external_id' => 'externalId',
        'date' => 'date',
        'contact_id' => 'contactId',
        'contact_first_name' => 'contactFirstName',
        'contact_middle_name' => 'contactMiddleName',
        'contact_last_name' => 'contactLastName',
        'contact_license_name' => 'contactLicenseName',
        'contact_trade_name' => 'contactTradeName',
        'contact_organization_name' => 'contactOrganizationName',
        'type' => 'type',
        'item_count' => 'itemCount',
        'ttsn' => 'ttsn',
        'otsn' => 'otsn',
        'purchase_order_number' => 'purchaseOrderNumber',
        'invoice_number' => 'invoiceNumber',
        'shipment_tracking_number' => 'shipmentTrackingNumber',
        'theft_loss_discovered_date' => 'theftLoss_DiscoveredDate',
        'theft_loss_type' => 'theftLoss_Type',
        'theft_loss_atf_issued_incident_number' => 'theftLoss_ATFIssuedIncidentNumber',
        'theft_loss_police_incident_number' => 'theftLoss_PoliceIncidentNumber',
        'destroyed_date' => 'destroyed_Date',
        'destroyed_description' => 'destroyed_Description',
        'destroyed_witness1' => 'destroyed_Witness1',
        'destroyed_witness2' => 'destroyed_Witness2',
        'submission_date' => 'submissionDate',
        'is4473' => 'is4473',
        'is_manufacturing_disposition' => 'isManufacturingDisposition',
        'status' => 'status',
        'note' => 'note',
        'create_user_email' => 'createUserEmail'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'external_id' => 'setExternalId',
        'date' => 'setDate',
        'contact_id' => 'setContactId',
        'contact_first_name' => 'setContactFirstName',
        'contact_middle_name' => 'setContactMiddleName',
        'contact_last_name' => 'setContactLastName',
        'contact_license_name' => 'setContactLicenseName',
        'contact_trade_name' => 'setContactTradeName',
        'contact_organization_name' => 'setContactOrganizationName',
        'type' => 'setType',
        'item_count' => 'setItemCount',
        'ttsn' => 'setTtsn',
        'otsn' => 'setOtsn',
        'purchase_order_number' => 'setPurchaseOrderNumber',
        'invoice_number' => 'setInvoiceNumber',
        'shipment_tracking_number' => 'setShipmentTrackingNumber',
        'theft_loss_discovered_date' => 'setTheftLossDiscoveredDate',
        'theft_loss_type' => 'setTheftLossType',
        'theft_loss_atf_issued_incident_number' => 'setTheftLossAtfIssuedIncidentNumber',
        'theft_loss_police_incident_number' => 'setTheftLossPoliceIncidentNumber',
        'destroyed_date' => 'setDestroyedDate',
        'destroyed_description' => 'setDestroyedDescription',
        'destroyed_witness1' => 'setDestroyedWitness1',
        'destroyed_witness2' => 'setDestroyedWitness2',
        'submission_date' => 'setSubmissionDate',
        'is4473' => 'setIs4473',
        'is_manufacturing_disposition' => 'setIsManufacturingDisposition',
        'status' => 'setStatus',
        'note' => 'setNote',
        'create_user_email' => 'setCreateUserEmail'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'external_id' => 'getExternalId',
        'date' => 'getDate',
        'contact_id' => 'getContactId',
        'contact_first_name' => 'getContactFirstName',
        'contact_middle_name' => 'getContactMiddleName',
        'contact_last_name' => 'getContactLastName',
        'contact_license_name' => 'getContactLicenseName',
        'contact_trade_name' => 'getContactTradeName',
        'contact_organization_name' => 'getContactOrganizationName',
        'type' => 'getType',
        'item_count' => 'getItemCount',
        'ttsn' => 'getTtsn',
        'otsn' => 'getOtsn',
        'purchase_order_number' => 'getPurchaseOrderNumber',
        'invoice_number' => 'getInvoiceNumber',
        'shipment_tracking_number' => 'getShipmentTrackingNumber',
        'theft_loss_discovered_date' => 'getTheftLossDiscoveredDate',
        'theft_loss_type' => 'getTheftLossType',
        'theft_loss_atf_issued_incident_number' => 'getTheftLossAtfIssuedIncidentNumber',
        'theft_loss_police_incident_number' => 'getTheftLossPoliceIncidentNumber',
        'destroyed_date' => 'getDestroyedDate',
        'destroyed_description' => 'getDestroyedDescription',
        'destroyed_witness1' => 'getDestroyedWitness1',
        'destroyed_witness2' => 'getDestroyedWitness2',
        'submission_date' => 'getSubmissionDate',
        'is4473' => 'getIs4473',
        'is_manufacturing_disposition' => 'getIsManufacturingDisposition',
        'status' => 'getStatus',
        'note' => 'getNote',
        'create_user_email' => 'getCreateUserEmail'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['external_id'] = isset($data['external_id']) ? $data['external_id'] : null;
        $this->container['date'] = isset($data['date']) ? $data['date'] : null;
        $this->container['contact_id'] = isset($data['contact_id']) ? $data['contact_id'] : null;
        $this->container['contact_first_name'] = isset($data['contact_first_name']) ? $data['contact_first_name'] : null;
        $this->container['contact_middle_name'] = isset($data['contact_middle_name']) ? $data['contact_middle_name'] : null;
        $this->container['contact_last_name'] = isset($data['contact_last_name']) ? $data['contact_last_name'] : null;
        $this->container['contact_license_name'] = isset($data['contact_license_name']) ? $data['contact_license_name'] : null;
        $this->container['contact_trade_name'] = isset($data['contact_trade_name']) ? $data['contact_trade_name'] : null;
        $this->container['contact_organization_name'] = isset($data['contact_organization_name']) ? $data['contact_organization_name'] : null;
        $this->container['type'] = isset($data['type']) ? $data['type'] : null;
        $this->container['item_count'] = isset($data['item_count']) ? $data['item_count'] : null;
        $this->container['ttsn'] = isset($data['ttsn']) ? $data['ttsn'] : null;
        $this->container['otsn'] = isset($data['otsn']) ? $data['otsn'] : null;
        $this->container['purchase_order_number'] = isset($data['purchase_order_number']) ? $data['purchase_order_number'] : null;
        $this->container['invoice_number'] = isset($data['invoice_number']) ? $data['invoice_number'] : null;
        $this->container['shipment_tracking_number'] = isset($data['shipment_tracking_number']) ? $data['shipment_tracking_number'] : null;
        $this->container['theft_loss_discovered_date'] = isset($data['theft_loss_discovered_date']) ? $data['theft_loss_discovered_date'] : null;
        $this->container['theft_loss_type'] = isset($data['theft_loss_type']) ? $data['theft_loss_type'] : null;
        $this->container['theft_loss_atf_issued_incident_number'] = isset($data['theft_loss_atf_issued_incident_number']) ? $data['theft_loss_atf_issued_incident_number'] : null;
        $this->container['theft_loss_police_incident_number'] = isset($data['theft_loss_police_incident_number']) ? $data['theft_loss_police_incident_number'] : null;
        $this->container['destroyed_date'] = isset($data['destroyed_date']) ? $data['destroyed_date'] : null;
        $this->container['destroyed_description'] = isset($data['destroyed_description']) ? $data['destroyed_description'] : null;
        $this->container['destroyed_witness1'] = isset($data['destroyed_witness1']) ? $data['destroyed_witness1'] : null;
        $this->container['destroyed_witness2'] = isset($data['destroyed_witness2']) ? $data['destroyed_witness2'] : null;
        $this->container['submission_date'] = isset($data['submission_date']) ? $data['submission_date'] : null;
        $this->container['is4473'] = isset($data['is4473']) ? $data['is4473'] : null;
        $this->container['is_manufacturing_disposition'] = isset($data['is_manufacturing_disposition']) ? $data['is_manufacturing_disposition'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['note'] = isset($data['note']) ? $data['note'] : null;
        $this->container['create_user_email'] = isset($data['create_user_email']) ? $data['create_user_email'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets external_id
     *
     * @return string
     */
    public function getExternalId()
    {
        return $this->container['external_id'];
    }

    /**
     * Sets external_id
     *
     * @param string $external_id external_id
     *
     * @return $this
     */
    public function setExternalId($external_id)
    {
        $this->container['external_id'] = $external_id;

        return $this;
    }

    /**
     * Gets date
     *
     * @return \DateTime
     */
    public function getDate()
    {
        return $this->container['date'];
    }

    /**
     * Sets date
     *
     * @param \DateTime $date date
     *
     * @return $this
     */
    public function setDate($date)
    {
        $this->container['date'] = $date;

        return $this;
    }

    /**
     * Gets contact_id
     *
     * @return string
     */
    public function getContactId()
    {
        return $this->container['contact_id'];
    }

    /**
     * Sets contact_id
     *
     * @param string $contact_id contact_id
     *
     * @return $this
     */
    public function setContactId($contact_id)
    {
        $this->container['contact_id'] = $contact_id;

        return $this;
    }

    /**
     * Gets contact_first_name
     *
     * @return string
     */
    public function getContactFirstName()
    {
        return $this->container['contact_first_name'];
    }

    /**
     * Sets contact_first_name
     *
     * @param string $contact_first_name contact_first_name
     *
     * @return $this
     */
    public function setContactFirstName($contact_first_name)
    {
        $this->container['contact_first_name'] = $contact_first_name;

        return $this;
    }

    /**
     * Gets contact_middle_name
     *
     * @return string
     */
    public function getContactMiddleName()
    {
        return $this->container['contact_middle_name'];
    }

    /**
     * Sets contact_middle_name
     *
     * @param string $contact_middle_name contact_middle_name
     *
     * @return $this
     */
    public function setContactMiddleName($contact_middle_name)
    {
        $this->container['contact_middle_name'] = $contact_middle_name;

        return $this;
    }

    /**
     * Gets contact_last_name
     *
     * @return string
     */
    public function getContactLastName()
    {
        return $this->container['contact_last_name'];
    }

    /**
     * Sets contact_last_name
     *
     * @param string $contact_last_name contact_last_name
     *
     * @return $this
     */
    public function setContactLastName($contact_last_name)
    {
        $this->container['contact_last_name'] = $contact_last_name;

        return $this;
    }

    /**
     * Gets contact_license_name
     *
     * @return string
     */
    public function getContactLicenseName()
    {
        return $this->container['contact_license_name'];
    }

    /**
     * Sets contact_license_name
     *
     * @param string $contact_license_name contact_license_name
     *
     * @return $this
     */
    public function setContactLicenseName($contact_license_name)
    {
        $this->container['contact_license_name'] = $contact_license_name;

        return $this;
    }

    /**
     * Gets contact_trade_name
     *
     * @return string
     */
    public function getContactTradeName()
    {
        return $this->container['contact_trade_name'];
    }

    /**
     * Sets contact_trade_name
     *
     * @param string $contact_trade_name contact_trade_name
     *
     * @return $this
     */
    public function setContactTradeName($contact_trade_name)
    {
        $this->container['contact_trade_name'] = $contact_trade_name;

        return $this;
    }

    /**
     * Gets contact_organization_name
     *
     * @return string
     */
    public function getContactOrganizationName()
    {
        return $this->container['contact_organization_name'];
    }

    /**
     * Sets contact_organization_name
     *
     * @param string $contact_organization_name contact_organization_name
     *
     * @return $this
     */
    public function setContactOrganizationName($contact_organization_name)
    {
        $this->container['contact_organization_name'] = $contact_organization_name;

        return $this;
    }

    /**
     * Gets type
     *
     * @return string
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string $type type
     *
     * @return $this
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets item_count
     *
     * @return int
     */
    public function getItemCount()
    {
        return $this->container['item_count'];
    }

    /**
     * Sets item_count
     *
     * @param int $item_count item_count
     *
     * @return $this
     */
    public function setItemCount($item_count)
    {
        $this->container['item_count'] = $item_count;

        return $this;
    }

    /**
     * Gets ttsn
     *
     * @return string
     */
    public function getTtsn()
    {
        return $this->container['ttsn'];
    }

    /**
     * Sets ttsn
     *
     * @param string $ttsn ttsn
     *
     * @return $this
     */
    public function setTtsn($ttsn)
    {
        $this->container['ttsn'] = $ttsn;

        return $this;
    }

    /**
     * Gets otsn
     *
     * @return string
     */
    public function getOtsn()
    {
        return $this->container['otsn'];
    }

    /**
     * Sets otsn
     *
     * @param string $otsn otsn
     *
     * @return $this
     */
    public function setOtsn($otsn)
    {
        $this->container['otsn'] = $otsn;

        return $this;
    }

    /**
     * Gets purchase_order_number
     *
     * @return string
     */
    public function getPurchaseOrderNumber()
    {
        return $this->container['purchase_order_number'];
    }

    /**
     * Sets purchase_order_number
     *
     * @param string $purchase_order_number purchase_order_number
     *
     * @return $this
     */
    public function setPurchaseOrderNumber($purchase_order_number)
    {
        $this->container['purchase_order_number'] = $purchase_order_number;

        return $this;
    }

    /**
     * Gets invoice_number
     *
     * @return string
     */
    public function getInvoiceNumber()
    {
        return $this->container['invoice_number'];
    }

    /**
     * Sets invoice_number
     *
     * @param string $invoice_number invoice_number
     *
     * @return $this
     */
    public function setInvoiceNumber($invoice_number)
    {
        $this->container['invoice_number'] = $invoice_number;

        return $this;
    }

    /**
     * Gets shipment_tracking_number
     *
     * @return string
     */
    public function getShipmentTrackingNumber()
    {
        return $this->container['shipment_tracking_number'];
    }

    /**
     * Sets shipment_tracking_number
     *
     * @param string $shipment_tracking_number shipment_tracking_number
     *
     * @return $this
     */
    public function setShipmentTrackingNumber($shipment_tracking_number)
    {
        $this->container['shipment_tracking_number'] = $shipment_tracking_number;

        return $this;
    }

    /**
     * Gets theft_loss_discovered_date
     *
     * @return \DateTime
     */
    public function getTheftLossDiscoveredDate()
    {
        return $this->container['theft_loss_discovered_date'];
    }

    /**
     * Sets theft_loss_discovered_date
     *
     * @param \DateTime $theft_loss_discovered_date theft_loss_discovered_date
     *
     * @return $this
     */
    public function setTheftLossDiscoveredDate($theft_loss_discovered_date)
    {
        $this->container['theft_loss_discovered_date'] = $theft_loss_discovered_date;

        return $this;
    }

    /**
     * Gets theft_loss_type
     *
     * @return string
     */
    public function getTheftLossType()
    {
        return $this->container['theft_loss_type'];
    }

    /**
     * Sets theft_loss_type
     *
     * @param string $theft_loss_type theft_loss_type
     *
     * @return $this
     */
    public function setTheftLossType($theft_loss_type)
    {
        $this->container['theft_loss_type'] = $theft_loss_type;

        return $this;
    }

    /**
     * Gets theft_loss_atf_issued_incident_number
     *
     * @return string
     */
    public function getTheftLossAtfIssuedIncidentNumber()
    {
        return $this->container['theft_loss_atf_issued_incident_number'];
    }

    /**
     * Sets theft_loss_atf_issued_incident_number
     *
     * @param string $theft_loss_atf_issued_incident_number theft_loss_atf_issued_incident_number
     *
     * @return $this
     */
    public function setTheftLossAtfIssuedIncidentNumber($theft_loss_atf_issued_incident_number)
    {
        $this->container['theft_loss_atf_issued_incident_number'] = $theft_loss_atf_issued_incident_number;

        return $this;
    }

    /**
     * Gets theft_loss_police_incident_number
     *
     * @return string
     */
    public function getTheftLossPoliceIncidentNumber()
    {
        return $this->container['theft_loss_police_incident_number'];
    }

    /**
     * Sets theft_loss_police_incident_number
     *
     * @param string $theft_loss_police_incident_number theft_loss_police_incident_number
     *
     * @return $this
     */
    public function setTheftLossPoliceIncidentNumber($theft_loss_police_incident_number)
    {
        $this->container['theft_loss_police_incident_number'] = $theft_loss_police_incident_number;

        return $this;
    }

    /**
     * Gets destroyed_date
     *
     * @return \DateTime
     */
    public function getDestroyedDate()
    {
        return $this->container['destroyed_date'];
    }

    /**
     * Sets destroyed_date
     *
     * @param \DateTime $destroyed_date destroyed_date
     *
     * @return $this
     */
    public function setDestroyedDate($destroyed_date)
    {
        $this->container['destroyed_date'] = $destroyed_date;

        return $this;
    }

    /**
     * Gets destroyed_description
     *
     * @return string
     */
    public function getDestroyedDescription()
    {
        return $this->container['destroyed_description'];
    }

    /**
     * Sets destroyed_description
     *
     * @param string $destroyed_description destroyed_description
     *
     * @return $this
     */
    public function setDestroyedDescription($destroyed_description)
    {
        $this->container['destroyed_description'] = $destroyed_description;

        return $this;
    }

    /**
     * Gets destroyed_witness1
     *
     * @return string
     */
    public function getDestroyedWitness1()
    {
        return $this->container['destroyed_witness1'];
    }

    /**
     * Sets destroyed_witness1
     *
     * @param string $destroyed_witness1 destroyed_witness1
     *
     * @return $this
     */
    public function setDestroyedWitness1($destroyed_witness1)
    {
        $this->container['destroyed_witness1'] = $destroyed_witness1;

        return $this;
    }

    /**
     * Gets destroyed_witness2
     *
     * @return string
     */
    public function getDestroyedWitness2()
    {
        return $this->container['destroyed_witness2'];
    }

    /**
     * Sets destroyed_witness2
     *
     * @param string $destroyed_witness2 destroyed_witness2
     *
     * @return $this
     */
    public function setDestroyedWitness2($destroyed_witness2)
    {
        $this->container['destroyed_witness2'] = $destroyed_witness2;

        return $this;
    }

    /**
     * Gets submission_date
     *
     * @return \DateTime
     */
    public function getSubmissionDate()
    {
        return $this->container['submission_date'];
    }

    /**
     * Sets submission_date
     *
     * @param \DateTime $submission_date submission_date
     *
     * @return $this
     */
    public function setSubmissionDate($submission_date)
    {
        $this->container['submission_date'] = $submission_date;

        return $this;
    }

    /**
     * Gets is4473
     *
     * @return bool
     */
    public function getIs4473()
    {
        return $this->container['is4473'];
    }

    /**
     * Sets is4473
     *
     * @param bool $is4473 is4473
     *
     * @return $this
     */
    public function setIs4473($is4473)
    {
        $this->container['is4473'] = $is4473;

        return $this;
    }

    /**
     * Gets is_manufacturing_disposition
     *
     * @return bool
     */
    public function getIsManufacturingDisposition()
    {
        return $this->container['is_manufacturing_disposition'];
    }

    /**
     * Sets is_manufacturing_disposition
     *
     * @param bool $is_manufacturing_disposition is_manufacturing_disposition
     *
     * @return $this
     */
    public function setIsManufacturingDisposition($is_manufacturing_disposition)
    {
        $this->container['is_manufacturing_disposition'] = $is_manufacturing_disposition;

        return $this;
    }

    /**
     * Gets status
     *
     * @return \Swagger\Client\Model\FastBoundWebModelsApiV1DispositionsBaseGetAllBaseGetAllCommandDispositionStatusModel
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param \Swagger\Client\Model\FastBoundWebModelsApiV1DispositionsBaseGetAllBaseGetAllCommandDispositionStatusModel $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets note
     *
     * @return string
     */
    public function getNote()
    {
        return $this->container['note'];
    }

    /**
     * Sets note
     *
     * @param string $note note
     *
     * @return $this
     */
    public function setNote($note)
    {
        $this->container['note'] = $note;

        return $this;
    }

    /**
     * Gets create_user_email
     *
     * @return string
     */
    public function getCreateUserEmail()
    {
        return $this->container['create_user_email'];
    }

    /**
     * Sets create_user_email
     *
     * @param string $create_user_email create_user_email
     *
     * @return $this
     */
    public function setCreateUserEmail($create_user_email)
    {
        $this->container['create_user_email'] = $create_user_email;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
