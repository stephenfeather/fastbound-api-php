<?php
/**
 * FastBoundWebModelsApiV1AcquisitionsGetAllCommandAcquisition
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * FastBound API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.62
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * FastBoundWebModelsApiV1AcquisitionsGetAllCommandAcquisition Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class FastBoundWebModelsApiV1AcquisitionsGetAllCommandAcquisition implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'FastBound.Web.Models.Api.V1.Acquisitions.GetAll+Command+Acquisition';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'string',
        'external_id' => 'string',
        'date' => '\DateTime',
        'purchase_order_number' => 'string',
        'invoice_number' => 'string',
        'shipment_tracking_number' => 'string',
        'is_manufacturing_acquisition' => 'bool',
        'contact_first_name' => 'string',
        'contact_last_name' => 'string',
        'contact_license_name' => 'string',
        'contact_trade_name' => 'string',
        'contact_organization_name' => 'string',
        'type' => 'string',
        'item_count' => 'int',
        'create_user_email' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => 'uuid',
        'external_id' => null,
        'date' => 'date-time',
        'purchase_order_number' => null,
        'invoice_number' => null,
        'shipment_tracking_number' => null,
        'is_manufacturing_acquisition' => null,
        'contact_first_name' => null,
        'contact_last_name' => null,
        'contact_license_name' => null,
        'contact_trade_name' => null,
        'contact_organization_name' => null,
        'type' => null,
        'item_count' => 'int32',
        'create_user_email' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'external_id' => 'externalId',
        'date' => 'date',
        'purchase_order_number' => 'purchaseOrderNumber',
        'invoice_number' => 'invoiceNumber',
        'shipment_tracking_number' => 'shipmentTrackingNumber',
        'is_manufacturing_acquisition' => 'isManufacturingAcquisition',
        'contact_first_name' => 'contactFirstName',
        'contact_last_name' => 'contactLastName',
        'contact_license_name' => 'contactLicenseName',
        'contact_trade_name' => 'contactTradeName',
        'contact_organization_name' => 'contactOrganizationName',
        'type' => 'type',
        'item_count' => 'itemCount',
        'create_user_email' => 'createUserEmail'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'external_id' => 'setExternalId',
        'date' => 'setDate',
        'purchase_order_number' => 'setPurchaseOrderNumber',
        'invoice_number' => 'setInvoiceNumber',
        'shipment_tracking_number' => 'setShipmentTrackingNumber',
        'is_manufacturing_acquisition' => 'setIsManufacturingAcquisition',
        'contact_first_name' => 'setContactFirstName',
        'contact_last_name' => 'setContactLastName',
        'contact_license_name' => 'setContactLicenseName',
        'contact_trade_name' => 'setContactTradeName',
        'contact_organization_name' => 'setContactOrganizationName',
        'type' => 'setType',
        'item_count' => 'setItemCount',
        'create_user_email' => 'setCreateUserEmail'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'external_id' => 'getExternalId',
        'date' => 'getDate',
        'purchase_order_number' => 'getPurchaseOrderNumber',
        'invoice_number' => 'getInvoiceNumber',
        'shipment_tracking_number' => 'getShipmentTrackingNumber',
        'is_manufacturing_acquisition' => 'getIsManufacturingAcquisition',
        'contact_first_name' => 'getContactFirstName',
        'contact_last_name' => 'getContactLastName',
        'contact_license_name' => 'getContactLicenseName',
        'contact_trade_name' => 'getContactTradeName',
        'contact_organization_name' => 'getContactOrganizationName',
        'type' => 'getType',
        'item_count' => 'getItemCount',
        'create_user_email' => 'getCreateUserEmail'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['external_id'] = isset($data['external_id']) ? $data['external_id'] : null;
        $this->container['date'] = isset($data['date']) ? $data['date'] : null;
        $this->container['purchase_order_number'] = isset($data['purchase_order_number']) ? $data['purchase_order_number'] : null;
        $this->container['invoice_number'] = isset($data['invoice_number']) ? $data['invoice_number'] : null;
        $this->container['shipment_tracking_number'] = isset($data['shipment_tracking_number']) ? $data['shipment_tracking_number'] : null;
        $this->container['is_manufacturing_acquisition'] = isset($data['is_manufacturing_acquisition']) ? $data['is_manufacturing_acquisition'] : null;
        $this->container['contact_first_name'] = isset($data['contact_first_name']) ? $data['contact_first_name'] : null;
        $this->container['contact_last_name'] = isset($data['contact_last_name']) ? $data['contact_last_name'] : null;
        $this->container['contact_license_name'] = isset($data['contact_license_name']) ? $data['contact_license_name'] : null;
        $this->container['contact_trade_name'] = isset($data['contact_trade_name']) ? $data['contact_trade_name'] : null;
        $this->container['contact_organization_name'] = isset($data['contact_organization_name']) ? $data['contact_organization_name'] : null;
        $this->container['type'] = isset($data['type']) ? $data['type'] : null;
        $this->container['item_count'] = isset($data['item_count']) ? $data['item_count'] : null;
        $this->container['create_user_email'] = isset($data['create_user_email']) ? $data['create_user_email'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets external_id
     *
     * @return string
     */
    public function getExternalId()
    {
        return $this->container['external_id'];
    }

    /**
     * Sets external_id
     *
     * @param string $external_id external_id
     *
     * @return $this
     */
    public function setExternalId($external_id)
    {
        $this->container['external_id'] = $external_id;

        return $this;
    }

    /**
     * Gets date
     *
     * @return \DateTime
     */
    public function getDate()
    {
        return $this->container['date'];
    }

    /**
     * Sets date
     *
     * @param \DateTime $date date
     *
     * @return $this
     */
    public function setDate($date)
    {
        $this->container['date'] = $date;

        return $this;
    }

    /**
     * Gets purchase_order_number
     *
     * @return string
     */
    public function getPurchaseOrderNumber()
    {
        return $this->container['purchase_order_number'];
    }

    /**
     * Sets purchase_order_number
     *
     * @param string $purchase_order_number purchase_order_number
     *
     * @return $this
     */
    public function setPurchaseOrderNumber($purchase_order_number)
    {
        $this->container['purchase_order_number'] = $purchase_order_number;

        return $this;
    }

    /**
     * Gets invoice_number
     *
     * @return string
     */
    public function getInvoiceNumber()
    {
        return $this->container['invoice_number'];
    }

    /**
     * Sets invoice_number
     *
     * @param string $invoice_number invoice_number
     *
     * @return $this
     */
    public function setInvoiceNumber($invoice_number)
    {
        $this->container['invoice_number'] = $invoice_number;

        return $this;
    }

    /**
     * Gets shipment_tracking_number
     *
     * @return string
     */
    public function getShipmentTrackingNumber()
    {
        return $this->container['shipment_tracking_number'];
    }

    /**
     * Sets shipment_tracking_number
     *
     * @param string $shipment_tracking_number shipment_tracking_number
     *
     * @return $this
     */
    public function setShipmentTrackingNumber($shipment_tracking_number)
    {
        $this->container['shipment_tracking_number'] = $shipment_tracking_number;

        return $this;
    }

    /**
     * Gets is_manufacturing_acquisition
     *
     * @return bool
     */
    public function getIsManufacturingAcquisition()
    {
        return $this->container['is_manufacturing_acquisition'];
    }

    /**
     * Sets is_manufacturing_acquisition
     *
     * @param bool $is_manufacturing_acquisition is_manufacturing_acquisition
     *
     * @return $this
     */
    public function setIsManufacturingAcquisition($is_manufacturing_acquisition)
    {
        $this->container['is_manufacturing_acquisition'] = $is_manufacturing_acquisition;

        return $this;
    }

    /**
     * Gets contact_first_name
     *
     * @return string
     */
    public function getContactFirstName()
    {
        return $this->container['contact_first_name'];
    }

    /**
     * Sets contact_first_name
     *
     * @param string $contact_first_name contact_first_name
     *
     * @return $this
     */
    public function setContactFirstName($contact_first_name)
    {
        $this->container['contact_first_name'] = $contact_first_name;

        return $this;
    }

    /**
     * Gets contact_last_name
     *
     * @return string
     */
    public function getContactLastName()
    {
        return $this->container['contact_last_name'];
    }

    /**
     * Sets contact_last_name
     *
     * @param string $contact_last_name contact_last_name
     *
     * @return $this
     */
    public function setContactLastName($contact_last_name)
    {
        $this->container['contact_last_name'] = $contact_last_name;

        return $this;
    }

    /**
     * Gets contact_license_name
     *
     * @return string
     */
    public function getContactLicenseName()
    {
        return $this->container['contact_license_name'];
    }

    /**
     * Sets contact_license_name
     *
     * @param string $contact_license_name contact_license_name
     *
     * @return $this
     */
    public function setContactLicenseName($contact_license_name)
    {
        $this->container['contact_license_name'] = $contact_license_name;

        return $this;
    }

    /**
     * Gets contact_trade_name
     *
     * @return string
     */
    public function getContactTradeName()
    {
        return $this->container['contact_trade_name'];
    }

    /**
     * Sets contact_trade_name
     *
     * @param string $contact_trade_name contact_trade_name
     *
     * @return $this
     */
    public function setContactTradeName($contact_trade_name)
    {
        $this->container['contact_trade_name'] = $contact_trade_name;

        return $this;
    }

    /**
     * Gets contact_organization_name
     *
     * @return string
     */
    public function getContactOrganizationName()
    {
        return $this->container['contact_organization_name'];
    }

    /**
     * Sets contact_organization_name
     *
     * @param string $contact_organization_name contact_organization_name
     *
     * @return $this
     */
    public function setContactOrganizationName($contact_organization_name)
    {
        $this->container['contact_organization_name'] = $contact_organization_name;

        return $this;
    }

    /**
     * Gets type
     *
     * @return string
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string $type type
     *
     * @return $this
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets item_count
     *
     * @return int
     */
    public function getItemCount()
    {
        return $this->container['item_count'];
    }

    /**
     * Sets item_count
     *
     * @param int $item_count item_count
     *
     * @return $this
     */
    public function setItemCount($item_count)
    {
        $this->container['item_count'] = $item_count;

        return $this;
    }

    /**
     * Gets create_user_email
     *
     * @return string
     */
    public function getCreateUserEmail()
    {
        return $this->container['create_user_email'];
    }

    /**
     * Sets create_user_email
     *
     * @param string $create_user_email create_user_email
     *
     * @return $this
     */
    public function setCreateUserEmail($create_user_email)
    {
        $this->container['create_user_email'] = $create_user_email;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
