<?php
/**
 * DispositionsV1ApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * FastBound API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.62
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use Swagger\Client\Configuration;
use Swagger\Client\ApiException;
use Swagger\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * DispositionsV1ApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class DispositionsV1ApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for accountNumApiDispositionsCreateAndCommitPost
     *
     * Create and commit a disposition in a single request..
     *
     */
    public function testAccountNumApiDispositionsCreateAndCommitPost()
    {
    }

    /**
     * Test case for accountNumApiDispositionsDestroyedPost
     *
     * Creates a new Destroyed disposition..
     *
     */
    public function testAccountNumApiDispositionsDestroyedPost()
    {
    }

    /**
     * Test case for accountNumApiDispositionsDispositionExternalIdItemsAddByExternalIdPost
     *
     * Add items to the specified disposition, using external identifiers..
     *
     */
    public function testAccountNumApiDispositionsDispositionExternalIdItemsAddByExternalIdPost()
    {
    }

    /**
     * Test case for accountNumApiDispositionsDispositionExternalIdItemsAddBySearchPost
     *
     * Add items to the specified disposition using search parameters. If multiple items match, you must specify  whether to use the first or last matching item (by Acquire Date). Search parameters must match exactly..
     *
     */
    public function testAccountNumApiDispositionsDispositionExternalIdItemsAddBySearchPost()
    {
    }

    /**
     * Test case for accountNumApiDispositionsDispositionExternalIdItemsPost
     *
     * Add items to the specified disposition, using external identifiers..
     *
     */
    public function testAccountNumApiDispositionsDispositionExternalIdItemsPost()
    {
    }

    /**
     * Test case for accountNumApiDispositionsExternalIdGet
     *
     * Retrieves the specified disposition by External ID..
     *
     */
    public function testAccountNumApiDispositionsExternalIdGet()
    {
    }

    /**
     * Test case for accountNumApiDispositionsGet
     *
     * Retrieves the account's dispositions..
     *
     */
    public function testAccountNumApiDispositionsGet()
    {
    }

    /**
     * Test case for accountNumApiDispositionsGetByExternalIdExternalIdGet
     *
     * Retrieves the specified disposition by External ID..
     *
     */
    public function testAccountNumApiDispositionsGetByExternalIdExternalIdGet()
    {
    }

    /**
     * Test case for accountNumApiDispositionsIdAttachContactContactIdPut
     *
     * Attaches a contact to the specified disposition..
     *
     */
    public function testAccountNumApiDispositionsIdAttachContactContactIdPut()
    {
    }

    /**
     * Test case for accountNumApiDispositionsIdCommitPost
     *
     * Commits the specified disposition..
     *
     */
    public function testAccountNumApiDispositionsIdCommitPost()
    {
    }

    /**
     * Test case for accountNumApiDispositionsIdDelete
     *
     * Deletes the specified disposition..
     *
     */
    public function testAccountNumApiDispositionsIdDelete()
    {
    }

    /**
     * Test case for accountNumApiDispositionsIdGet
     *
     * Retrieves the specified disposition by unique ID..
     *
     */
    public function testAccountNumApiDispositionsIdGet()
    {
    }

    /**
     * Test case for accountNumApiDispositionsIdItemsDispositionItemIdDelete
     *
     * Removes an item from a disposition by disposition item ID..
     *
     */
    public function testAccountNumApiDispositionsIdItemsDispositionItemIdDelete()
    {
    }

    /**
     * Test case for accountNumApiDispositionsIdItemsDispositionItemIdPut
     *
     * Edits an item's price for the specified disposition..
     *
     */
    public function testAccountNumApiDispositionsIdItemsDispositionItemIdPut()
    {
    }

    /**
     * Test case for accountNumApiDispositionsIdItemsGet
     *
     * Retrieves the items for the specified disposition..
     *
     */
    public function testAccountNumApiDispositionsIdItemsGet()
    {
    }

    /**
     * Test case for accountNumApiDispositionsIdItemsPost
     *
     * Add items to the specified disposition..
     *
     */
    public function testAccountNumApiDispositionsIdItemsPost()
    {
    }

    /**
     * Test case for accountNumApiDispositionsIdItemsRemoveByExternalIdItemExternalIdDelete
     *
     * Removes an item from a disposition by item ExternalId..
     *
     */
    public function testAccountNumApiDispositionsIdItemsRemoveByExternalIdItemExternalIdDelete()
    {
    }

    /**
     * Test case for accountNumApiDispositionsIdItemsRemoveItemIdDelete
     *
     * Removes an item from a disposition by item ID..
     *
     */
    public function testAccountNumApiDispositionsIdItemsRemoveItemIdDelete()
    {
    }

    /**
     * Test case for accountNumApiDispositionsIdPut
     *
     * Edits the specified disposition..
     *
     */
    public function testAccountNumApiDispositionsIdPut()
    {
    }

    /**
     * Test case for accountNumApiDispositionsLockByExternalIdExternalIdPut
     *
     * Creates a new 4473 and attaches the pending disposition to it..
     *
     */
    public function testAccountNumApiDispositionsLockByExternalIdExternalIdPut()
    {
    }

    /**
     * Test case for accountNumApiDispositionsLockIdPut
     *
     * Creates a new 4473 and assigns the pending disposition to it..
     *
     */
    public function testAccountNumApiDispositionsLockIdPut()
    {
    }

    /**
     * Test case for accountNumApiDispositionsNFAPost
     *
     * Creates a new NFA disposition..
     *
     */
    public function testAccountNumApiDispositionsNFAPost()
    {
    }

    /**
     * Test case for accountNumApiDispositionsOnly4473sGet
     *
     * Retrieves the account's dispositions that are tied to 4473s. Regular dispositions are not included..
     *
     */
    public function testAccountNumApiDispositionsOnly4473sGet()
    {
    }

    /**
     * Test case for accountNumApiDispositionsPost
     *
     * Creates a new disposition..
     *
     */
    public function testAccountNumApiDispositionsPost()
    {
    }

    /**
     * Test case for accountNumApiDispositionsTheftLossPost
     *
     * Creates a new Theft/Loss disposition..
     *
     */
    public function testAccountNumApiDispositionsTheftLossPost()
    {
    }
}
